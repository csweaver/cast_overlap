{"version":3,"sources":["actions/index.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["search_url","doSearch","movie_string","dispatch","console","log","concat","fetch","credentials","then","response","status","Error","json","type","movies","possibilities","receivedAt","Date","now","recieveSearch","catch","e","recieveVenn","results","App","react_default","a","createElement","className","App_SearchArea","App_Venn","Component","SearchArea","connect","state","search_results","selected_movies","data","charCode","this","props","target","value","currently_selected","selected","htmlFor","App_SearchBox","onfocus","handleSearch","bind","onkeypress","App_MovieList","clear","handleClear","SearchBox","id","onKeyPress","MovieList","map","p","App_Movie","mid","key","title","onClick","Movie","checkbox","checked","movie_id","deselected","deleteSelection","handleCheck","Venn","overlap","movie_list","movie_params","movie","join","table","length","header","m","rows","actors","actor","aidx","actor_td","rel","href","url","row","role","idx","character","handleVenn","Boolean","window","location","hostname","match","rootReducer","combineReducers","basic","arguments","undefined","Object","objectSpread","action","filter","includes","push","val","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b9770d9.chunk.js","sourcesContent":["const search_url = \"http://localhost:5000/api/search\";\nconst venn_url = \"http://localhost:5000/api/venn\";\n\nconst recieveSearch = json => ({\n\ttype: \"got movie search results\",\n\tmovies: json.possibilities,\n\treceivedAt: Date.now(),\n});\n\nexport const doSearch = movie_string => {\n\treturn dispatch => {\n\t\tconsole.log(`${search_url}?title=${movie_string}`)\n\t\treturn fetch(`${search_url}?title=${movie_string}`, { credentials: \"same-origin\" })\n\t\t\t.then(response => {\n\t\t\t\tif (response.status >= 400 && response.status < 600) {\n\t\t\t\t\tthrow new Error(\"Uhhh... IDK? No  movie\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(json => {\n\t\t\t\tdispatch(recieveSearch(json));\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e)\n\t\t\t\tconsole.log(\"something went wrong\");\n\t\t\t});\n\t};\n};\n\nexport const addSelection = movie_id => ({\n\ttype:\"add movie to selection\",\n\tselected: movie_id\n})\n\nexport const deleteSelection = movie_id => ({\n\ttype:\"remove movie from selection\",\n\tdeselected: movie_id\n})\n\nexport const doVenn = movie_list => {\n\treturn dispatch => {\n\t\tlet movie_params = movie_list.map(movie => `movies=${movie}`)\n\t\tmovie_params = movie_params.join(\"&\")\n\t\treturn fetch(`${venn_url}?${movie_params}`, { credentials: \"same-origin\" })\n\t\t\t.then(response => {\n\t\t\t\tif (response.status >= 400 && response.status < 600) {\n\t\t\t\t\tthrow new Error(\"Uhhh... IDK? No  movie\");\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(json => {\n\t\t\t\tdispatch(recieveVenn(json));\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e)\n\t\t\t\tconsole.log(\"something went wrong\");\n\t\t\t});\n\t};\n};\n\nconst recieveVenn = json => ({\n\ttype: \"got venn results\",\n\tresults: json,\n\treceivedAt: Date.now(),\n});\n\nexport const clearUnselected = movie_list => ({\n\ttype: \"clear unselected\",\n\tcurrently_selected: movie_list,\n})","import React, {Component} from 'react';\nimport './App.css';\nimport {addSelection, deleteSelection, doSearch, doVenn, clearUnselected} from \"../actions\"\nimport {connect} from \"react-redux\"\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>IMDB Venn Diagram</h1>\n\t\t\t\t<p>\n\t\t\t\t\tWhich actors are in other movies?\n\t\t\t\t</p>\n\t\t\t\t<SearchArea />\n\t\t\t\t<Venn />\n\t\t\t</div>\n\t\t);\n\t}\n}\n@connect(state => {\n\treturn {\n\t\tsearch_results: state.search_results,\n\t\tselected_movies: state.selected_movies\n\t}\n})\n\nclass SearchArea extends Component {\n\n\thandleSearch(e, data) {\n\t\t// TODO actually search for movie\n\t\tif (e.charCode === 13) {\n\t\t\tconst {dispatch} = this.props;\n\t\t\tdispatch(doSearch(e.target.value))\n\t\t\te.target.value = \"\";\n\t\t}\n\t}\n\n\thandleClear(e) {\n\t\tconst {dispatch} = this.props;\n\t\tdispatch(clearUnselected(this.props.selected_movies.selected))\n\t}\n\n\n\trender() {\n\t\treturn <div>\n\t\t\t<label htmlFor=\"m_search\">Search Movie or TV show </label><SearchBox onfocus={this.handleSearch.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonkeypress={this.handleSearch.bind(this)}/>\n\n\t\t\t<MovieList clear={this.handleClear.bind(this)} movies={this.props.search_results.movies}/>\n\t\t</div>\n\t}\n}\n\nconst SearchBox = props => {\n\treturn <input id=\"m_search\" onKeyPress={props.onkeypress} type=\"text\"/>\n}\n\nconst MovieList =\n\t(props) => {\n\t\tlet movies = props.movies.map((p) => {\n\t\t\treturn <Movie mid={p.id} key={p.title} title={p.title}/>\n\t\t})\n\t\treturn <div>\n\t\t\t<h2>Movies <button onClick={props.clear}>Clear</button></h2>\n\t\t\t{movies}\n\t\t</div>\n\t}\n\n@connect(state => {\n\treturn {}\n})\nclass Movie extends Component {\n\thandleCheck(e) {\n\t\tconst checkbox = e.target;\n\t\tconst {dispatch} = this.props;\n\t\tif (checkbox.checked) {\n\t\t\tdispatch(addSelection(this.props.mid))\n\t\t}\n\t\telse {\n\t\t\tdispatch(deleteSelection(this.props.mid))\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <div >\n\t\t\t<input onClick={this.handleCheck.bind(this)} type=\"checkbox\"/><span>{this.props.title}</span>\n\t\t</div>\n\t}\n}\n\n@connect(state => {\n\treturn {\n\t\tselected_movies: state.selected_movies,\n\t\toverlap: state.overlap\n\t}\n})\nclass Venn extends Component {\n\n\thandleVenn() {\n\t\tconst {dispatch} = this.props;\n\t\tdispatch(doVenn(this.props.selected_movies.selected))\n\t}\n\n\trender() {\n\t\tlet table = \"\"\n\t\tif (this.props.overlap.overlap.movies.length) {\n\t\t\tconst header = this.props.overlap.overlap.movies.map(m => {\n\t\t\t\treturn <th key={m.id}>{m.title}</th>\n\t\t\t})\n\t\t\tlet rows = <tr><td>No overlap</td></tr>\n\t\t\tif (this.props.overlap.overlap.actors.length) {\n\t\t\t\trows = this.props.overlap.overlap.actors.map((actor, aidx) => {\n\t\t\t\t\tconst actor_td = <td key={actor[0].id}><a target=\"_blank\" rel=\"noopener noreferrer\" href={actor[0].url}>{actor[0].actor}</a></td>\n\t\t\t\t\tconst row = actor.map((role, idx) => {\n\t\t\t\t\t\treturn <td key={`${role.character}-${idx}`}>{role.character}</td>\n\t\t\t\t\t})\n\t\t\t\t\treturn <tr key={aidx}>{actor_td}{row}</tr>\n\t\t\t\t})\n\t\t\t}\n\t\t\ttable = <table>\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Actor</th>\n\t\t\t\t\t{header}</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t</table>\n\t\t}\n\t\treturn <div><h2>Character Overlap<button onClick={this.handleVenn.bind(this)}> Calculate</button></h2>\n\n\t\t\t{table}</div>\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Created by weaverc10 on 2/16/19.\n */\nimport {combineReducers} from \"redux\";\n\nconst basic = (state = {}, action) => {\n\tif (action.type === \"basic type\") {\n\t\treturn {\n\t\t\t...state,\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n}\n\nconst search_results = (state = {movies: []}, action) => {\n\tif (action.type === \"got movie search results\") {\n\t\tlet movies = state.movies\n\t\tmovies = movies.concat(action.movies)\n\t\treturn {\n\t\t\t...state,\n\t\t\tmovies\n\t\t};\n\t}\n\telse if (action.type === \"clear unselected\") {\n\t\tconst movies = state.movies.filter(movie => {\n\t\t\t    return action.currently_selected.includes(movie.id)\n\t\t})\n\t\treturn {\n\t\t\t...state,\n\t\t\tmovies: movies,\n\t\t};\n\t}\n\telse {\n\t\treturn state;\n\t}\n}\n\nconst selected_movies = (state = {selected: []}, action) => {\n\tif (action.type === \"add movie to selection\") {\n\t\tlet selected = state.selected\n\t\tselected.push(action.selected)\n\t\treturn {\n\t\t\t...state,\n\t\t\tselected,\n\t\t};\n\t}\n\telse if (action.type === \"remove movie from selection\") {\n\t\tlet selected = state.selected\n\t\tselected = selected.filter((val) => {\n\t\t\treturn \tval !== action.deselected\n\t\t})\n\t\treturn {\n\t\t\t...state,\n\t\t\tselected,\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n\n}\n\nconst overlap = (state = {overlap: {movies: [], actors: []}}, action) => {\n\tif (action.type === \"got venn results\") {\n\t\treturn {\n\t\t\t...state,\n\t\t\toverlap: action.results,\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n}\n\n\nexport const rootReducer = combineReducers({\n\tbasic,\n\tsearch_results,\n\tselected_movies,\n\toverlap,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './reducers'\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}